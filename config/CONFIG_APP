#CONFIG_APP 
include $(TOP)/config/RELEASE
-include $(TOP)/config/RELEASE.$(HOST_ARCH)
include $(EPICS_BASE)/config/CONFIG
INSTALL_LOCATION = $(TOP)
ifdef INSTALL_LOCATION_APP
INSTALL_LOCATION = $(INSTALL_LOCATION_APP)
endif

# Include module definitions from RELEASE and RELEASE.$(T_A)
#
ifdef T_A
-include $(TOP)/config/O.$(T_A)/CONFIG_APP_INCLUDE
endif

# Use the unbundled sequencer (if enabled)
ifdef SEQ
SNC = $(SEQ)/bin/$(HOST_ARCH)/snc
endif

#Db stuff
# Where to install databases
INSTALL_DB = $(INSTALL_LOCATION)/db
# dbst based database optimization (default: YES)
DB_OPT = YES
# May be overridden if not all databases should be installed
INSTALLDB = $(DB)

SCH2EDIF=/opt/csr/CapFast/wcs/bin/sch2edif
E2DB = $(UTIL_BIN)/e2db
DBST = $(UTIL_BIN)/dbst

# New alternative to db creation. See RULES.Db
SCH2DB=$(UTIL_BIN)/Sch2db.pl
SCH2DB_FLAGS=-s $(EPICS_CAPFAST)/edif
# Uncomment to use sch2db instead of sch2edif + e2db
#USE_SCH2DB=YES

#Gui stuff
INSTALL_ADL	= $(INSTALL_LOCATION)/dl
INSTALL_FORM	= $(INSTALL_LOCATION)/form
INSTALL_APPDEF	= $(INSTALL_LOCATION)/xresources
INSTALL_CFGDATA	= $(INSTALL_LOCATION)/etc

#Rdist stuff
RDIST = rdist
#Find out if make was called with -n option, if yes add rdist option -v
MAKEOPTS = $(firstword $(MAKEFLAGS))
ifeq (,$(findstring =,$(MAKEOPTS)))
ifneq (,$(findstring n,$(MAKEOPTS)))
RDIST_FLAGS = -v
endif
endif
RDIST_FLAGS += -lstdout=all:file=./rdist.log=all \
  -d HOSTS_IOC="($(RDIST_HOSTS_IOC))" -d FILES_IOC="($(RDIST_FILES_IOC))" \
  -d HOSTS_OPI="($(RDIST_HOSTS_OPI))" -d FILES_OPI="($(RDIST_FILES_OPI))" \
  -d HOSTS_DOC="($(RDIST_HOSTS_DOC))" -d FILES_DOC="($(RDIST_FILES_DOC))"
#IOC
RDIST_HOSTS_IOC = vwhost
RDIST_DIR_IOC = /opt/IOC
#OPI
RDIST_HOSTS_OPI = vwhost
RDIST_DIR_OPI = /opt/OPI
#DOC
RDIST_HOSTS_DOC = help
RDIST_DIR_DOC = /opt/apache/help/htdocs

include $(TOP)/config/CONFIG

#
# this speeds up the build by turning off implicit rules search
# for EPICS Makefiles (which are not created from other files)
#
.PHONY:: $(EPICS_BASE)/config/CONFIG DEPENDS
.PHONY:: $(EPICS_BASE)/config/CONFIG_SITE.$(BUILD_TYPE).$(T_A)
.PHONY:: $(EPICS_BASE)/config/CONFIG_SITE.$(BUILD_TYPE).$(HOST_ARCH)
.PHONY:: $(EPICS_BASE)/config/CONFIG_SITE.$(BUILD_TYPE)
.PHONY:: $(EPICS_BASE)/config/CONFIG_SITE.Host.UnixCommon

.PHONY:: $(EPICS_BASE)/config/RULES.$(BUILD_TYPE)
.PHONY:: $(EPICS_BASE)/config/RULES_*

.PHONY:: $(HOME)/EPICS_CONFIG
.PHONY:: $(HOME)/EPICS_CONFIG.$(BUILD_TYPE) $(HOME)/EPICS_CONFIG.$(HOST_ARCH)
.PHONY:: $(HOME)/EPICS_CONFIG.$(BUILD_TYPE).$(T_A)
.PHONY:: $(HOME)/EPICS_CONFIG.$(BUILD_TYPE).$(HOST_ARCH)
.PHONY:: $(HOME)/EPICS_CONFIG_HOST_ARCH.$(HOST_ARCH)

.PHONY:: $(TOP)/config/CONFIG
.PHONY:: $(TOP)/config/RULES.* $(TOP)/config/RULES_*
.PHONY:: ../Makefile.* Makefile
